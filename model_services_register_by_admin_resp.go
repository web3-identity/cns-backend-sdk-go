/*
CNS-BACKEND

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cnsbackend

import (
	"encoding/json"
)

// ServicesRegisterByAdminResp struct for ServicesRegisterByAdminResp
type ServicesRegisterByAdminResp struct {
	CommitHash *string `json:"commit_hash,omitempty"`
	TxError *string `json:"tx_error,omitempty"`
	TxHash *string `json:"tx_hash,omitempty"`
	TxState *int32 `json:"tx_state,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServicesRegisterByAdminResp ServicesRegisterByAdminResp

// NewServicesRegisterByAdminResp instantiates a new ServicesRegisterByAdminResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesRegisterByAdminResp() *ServicesRegisterByAdminResp {
	this := ServicesRegisterByAdminResp{}
	return &this
}

// NewServicesRegisterByAdminRespWithDefaults instantiates a new ServicesRegisterByAdminResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesRegisterByAdminRespWithDefaults() *ServicesRegisterByAdminResp {
	this := ServicesRegisterByAdminResp{}
	return &this
}

// GetCommitHash returns the CommitHash field value if set, zero value otherwise.
func (o *ServicesRegisterByAdminResp) GetCommitHash() string {
	if o == nil || isNil(o.CommitHash) {
		var ret string
		return ret
	}
	return *o.CommitHash
}

// GetCommitHashOk returns a tuple with the CommitHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesRegisterByAdminResp) GetCommitHashOk() (*string, bool) {
	if o == nil || isNil(o.CommitHash) {
    return nil, false
	}
	return o.CommitHash, true
}

// HasCommitHash returns a boolean if a field has been set.
func (o *ServicesRegisterByAdminResp) HasCommitHash() bool {
	if o != nil && !isNil(o.CommitHash) {
		return true
	}

	return false
}

// SetCommitHash gets a reference to the given string and assigns it to the CommitHash field.
func (o *ServicesRegisterByAdminResp) SetCommitHash(v string) {
	o.CommitHash = &v
}

// GetTxError returns the TxError field value if set, zero value otherwise.
func (o *ServicesRegisterByAdminResp) GetTxError() string {
	if o == nil || isNil(o.TxError) {
		var ret string
		return ret
	}
	return *o.TxError
}

// GetTxErrorOk returns a tuple with the TxError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesRegisterByAdminResp) GetTxErrorOk() (*string, bool) {
	if o == nil || isNil(o.TxError) {
    return nil, false
	}
	return o.TxError, true
}

// HasTxError returns a boolean if a field has been set.
func (o *ServicesRegisterByAdminResp) HasTxError() bool {
	if o != nil && !isNil(o.TxError) {
		return true
	}

	return false
}

// SetTxError gets a reference to the given string and assigns it to the TxError field.
func (o *ServicesRegisterByAdminResp) SetTxError(v string) {
	o.TxError = &v
}

// GetTxHash returns the TxHash field value if set, zero value otherwise.
func (o *ServicesRegisterByAdminResp) GetTxHash() string {
	if o == nil || isNil(o.TxHash) {
		var ret string
		return ret
	}
	return *o.TxHash
}

// GetTxHashOk returns a tuple with the TxHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesRegisterByAdminResp) GetTxHashOk() (*string, bool) {
	if o == nil || isNil(o.TxHash) {
    return nil, false
	}
	return o.TxHash, true
}

// HasTxHash returns a boolean if a field has been set.
func (o *ServicesRegisterByAdminResp) HasTxHash() bool {
	if o != nil && !isNil(o.TxHash) {
		return true
	}

	return false
}

// SetTxHash gets a reference to the given string and assigns it to the TxHash field.
func (o *ServicesRegisterByAdminResp) SetTxHash(v string) {
	o.TxHash = &v
}

// GetTxState returns the TxState field value if set, zero value otherwise.
func (o *ServicesRegisterByAdminResp) GetTxState() int32 {
	if o == nil || isNil(o.TxState) {
		var ret int32
		return ret
	}
	return *o.TxState
}

// GetTxStateOk returns a tuple with the TxState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesRegisterByAdminResp) GetTxStateOk() (*int32, bool) {
	if o == nil || isNil(o.TxState) {
    return nil, false
	}
	return o.TxState, true
}

// HasTxState returns a boolean if a field has been set.
func (o *ServicesRegisterByAdminResp) HasTxState() bool {
	if o != nil && !isNil(o.TxState) {
		return true
	}

	return false
}

// SetTxState gets a reference to the given int32 and assigns it to the TxState field.
func (o *ServicesRegisterByAdminResp) SetTxState(v int32) {
	o.TxState = &v
}

func (o ServicesRegisterByAdminResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CommitHash) {
		toSerialize["commit_hash"] = o.CommitHash
	}
	if !isNil(o.TxError) {
		toSerialize["tx_error"] = o.TxError
	}
	if !isNil(o.TxHash) {
		toSerialize["tx_hash"] = o.TxHash
	}
	if !isNil(o.TxState) {
		toSerialize["tx_state"] = o.TxState
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ServicesRegisterByAdminResp) UnmarshalJSON(bytes []byte) (err error) {
	varServicesRegisterByAdminResp := _ServicesRegisterByAdminResp{}

	if err = json.Unmarshal(bytes, &varServicesRegisterByAdminResp); err == nil {
		*o = ServicesRegisterByAdminResp(varServicesRegisterByAdminResp)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "commit_hash")
		delete(additionalProperties, "tx_error")
		delete(additionalProperties, "tx_hash")
		delete(additionalProperties, "tx_state")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServicesRegisterByAdminResp struct {
	value *ServicesRegisterByAdminResp
	isSet bool
}

func (v NullableServicesRegisterByAdminResp) Get() *ServicesRegisterByAdminResp {
	return v.value
}

func (v *NullableServicesRegisterByAdminResp) Set(val *ServicesRegisterByAdminResp) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesRegisterByAdminResp) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesRegisterByAdminResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesRegisterByAdminResp(val *ServicesRegisterByAdminResp) *NullableServicesRegisterByAdminResp {
	return &NullableServicesRegisterByAdminResp{value: val, isSet: true}
}

func (v NullableServicesRegisterByAdminResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesRegisterByAdminResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


