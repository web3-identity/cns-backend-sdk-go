/*
CNS-BACKEND

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cnsbackend

import (
	"encoding/json"
)

// ModelsRenewOrderArgs struct for ModelsRenewOrderArgs
type ModelsRenewOrderArgs struct {
	CnsName string `json:"cns_name"`
	Duration int32 `json:"duration"`
	Fuses *int32 `json:"fuses,omitempty"`
	WrapperExpiry int32 `json:"wrapper_expiry"`
	AdditionalProperties map[string]interface{}
}

type _ModelsRenewOrderArgs ModelsRenewOrderArgs

// NewModelsRenewOrderArgs instantiates a new ModelsRenewOrderArgs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsRenewOrderArgs(cnsName string, duration int32, wrapperExpiry int32) *ModelsRenewOrderArgs {
	this := ModelsRenewOrderArgs{}
	this.CnsName = cnsName
	this.Duration = duration
	this.WrapperExpiry = wrapperExpiry
	return &this
}

// NewModelsRenewOrderArgsWithDefaults instantiates a new ModelsRenewOrderArgs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsRenewOrderArgsWithDefaults() *ModelsRenewOrderArgs {
	this := ModelsRenewOrderArgs{}
	return &this
}

// GetCnsName returns the CnsName field value
func (o *ModelsRenewOrderArgs) GetCnsName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CnsName
}

// GetCnsNameOk returns a tuple with the CnsName field value
// and a boolean to check if the value has been set.
func (o *ModelsRenewOrderArgs) GetCnsNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CnsName, true
}

// SetCnsName sets field value
func (o *ModelsRenewOrderArgs) SetCnsName(v string) {
	o.CnsName = v
}

// GetDuration returns the Duration field value
func (o *ModelsRenewOrderArgs) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *ModelsRenewOrderArgs) GetDurationOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *ModelsRenewOrderArgs) SetDuration(v int32) {
	o.Duration = v
}

// GetFuses returns the Fuses field value if set, zero value otherwise.
func (o *ModelsRenewOrderArgs) GetFuses() int32 {
	if o == nil || isNil(o.Fuses) {
		var ret int32
		return ret
	}
	return *o.Fuses
}

// GetFusesOk returns a tuple with the Fuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRenewOrderArgs) GetFusesOk() (*int32, bool) {
	if o == nil || isNil(o.Fuses) {
    return nil, false
	}
	return o.Fuses, true
}

// HasFuses returns a boolean if a field has been set.
func (o *ModelsRenewOrderArgs) HasFuses() bool {
	if o != nil && !isNil(o.Fuses) {
		return true
	}

	return false
}

// SetFuses gets a reference to the given int32 and assigns it to the Fuses field.
func (o *ModelsRenewOrderArgs) SetFuses(v int32) {
	o.Fuses = &v
}

// GetWrapperExpiry returns the WrapperExpiry field value
func (o *ModelsRenewOrderArgs) GetWrapperExpiry() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WrapperExpiry
}

// GetWrapperExpiryOk returns a tuple with the WrapperExpiry field value
// and a boolean to check if the value has been set.
func (o *ModelsRenewOrderArgs) GetWrapperExpiryOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.WrapperExpiry, true
}

// SetWrapperExpiry sets field value
func (o *ModelsRenewOrderArgs) SetWrapperExpiry(v int32) {
	o.WrapperExpiry = v
}

func (o ModelsRenewOrderArgs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cns_name"] = o.CnsName
	}
	if true {
		toSerialize["duration"] = o.Duration
	}
	if !isNil(o.Fuses) {
		toSerialize["fuses"] = o.Fuses
	}
	if true {
		toSerialize["wrapper_expiry"] = o.WrapperExpiry
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ModelsRenewOrderArgs) UnmarshalJSON(bytes []byte) (err error) {
	varModelsRenewOrderArgs := _ModelsRenewOrderArgs{}

	if err = json.Unmarshal(bytes, &varModelsRenewOrderArgs); err == nil {
		*o = ModelsRenewOrderArgs(varModelsRenewOrderArgs)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "cns_name")
		delete(additionalProperties, "duration")
		delete(additionalProperties, "fuses")
		delete(additionalProperties, "wrapper_expiry")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsRenewOrderArgs struct {
	value *ModelsRenewOrderArgs
	isSet bool
}

func (v NullableModelsRenewOrderArgs) Get() *ModelsRenewOrderArgs {
	return v.value
}

func (v *NullableModelsRenewOrderArgs) Set(val *ModelsRenewOrderArgs) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsRenewOrderArgs) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsRenewOrderArgs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsRenewOrderArgs(val *ModelsRenewOrderArgs) *NullableModelsRenewOrderArgs {
	return &NullableModelsRenewOrderArgs{value: val, isSet: true}
}

func (v NullableModelsRenewOrderArgs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsRenewOrderArgs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


